package net.floodlightcontroller.controller;

import java.util.ArrayList;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.math.BigInteger;
import java.net.*;

public class ServerHandler extends Thread{

	static ArrayList<String> usernames;
	static ArrayList<String> passwords;
	
	DH dh;
	
	BufferedReader streamIn;
    PrintStream streamOut;
    Socket socket;
    int useridindex = 0;
    
	public ServerHandler(Socket socket){
		this.socket=socket;
		dh = new DH();
		//initiate();
	}
	
	public void initiate(){
		
		usernames = new ArrayList<String>();
		usernames.add(("bakry"));
		usernames.add(("omar"));
		usernames.add(("karim"));
		usernames.add(("mohamed"));
		usernames.add(("shamy"));
		passwords = new ArrayList<String>();
		passwords.add(("bakrybakry"));
		passwords.add(("omaromar"));
		passwords.add(("karimkarim"));
		passwords.add(("mohamedmohamed"));
		passwords.add(("shamyshamy"));
		
    }
	
	public boolean checkuser(String user){
		
		for(int i =0 ; i<usernames.size();i++){
			if(usernames.get(i).equals(user)){
				useridindex=i;
			
				
			return true;
			}
			
		}
		return false;
	}
	
	public int finduser(String user){
		int numberofuser=0;
		for(int i =0 ; i<usernames.size();i++){
			if(usernames.get(i).equals(user)){
				numberofuser=i;
				break;}
		}
		return numberofuser;
		
	}

	public void run(){
		
		try {
			System.err.println("New client just connected");
			streamOut = new PrintStream(socket.getOutputStream(), true);
			streamIn = new BufferedReader(new InputStreamReader(socket.getInputStream()));
		} 
		catch (Exception e1) {
			try {
				socket.close();
				e1.printStackTrace();
			} 
			catch (Exception e2) {
				e2.printStackTrace();
			}
			e1.printStackTrace();
		}
	
		while(true){

			try{
				Thread.sleep(1);
				String message = streamIn.readLine();
            	if(message == null){
            		System.err.println("No more messages . Closing socket ...");
            		socket.close();
            		break;
            	}
            	else{
					Thread.sleep(1);
					
					if(message.startsWith("KEY")){
						String sent = message.substring(3);
						String sessionKey = dh.genSessionKey(new BigInteger(sent));
						System.err.println("Session Key : "+sessionKey);
						streamOut.println(dh.publicValue);
					}
					
					//System.err.println("Client sent --> "+message);
                    //streamOut.println("You sent : " + message);
					
				}
            
			}
			catch(Exception e){
				e.printStackTrace();
				
			}
	    }
			
    }

}
